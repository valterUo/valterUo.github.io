[{"authors":null,"categories":null,"content":"Valter is a doctoral researcher in computer science at the University of Helsinki. His research topics include studying quantum computing applications in data management and multi-model databases. Check the recent posts for more details about his research interests!\n","date":1650067200,"expirydate":-62135596800,"kind":"term","lang":"en","lastmod":1650067200,"objectID":"2525497d367e79493fd32b198b28f040","permalink":"","publishdate":"2022-04-16T00:00:00Z","relpermalink":"","section":"authors","summary":"Valter is a doctoral researcher in computer science at the University of Helsinki. His research topics include studying quantum computing applications in data management and multi-model databases. Check the recent posts for more details about his research interests!","tags":null,"title":"Valter Uotila","type":"authors"},{"authors":["Valter Uotila"],"categories":["Classiq coding competition","Constrained optimization"],"content":"Introduction Classiq organized an interesting quantum coding competition in May and June 2022. The competition consisted of four problems: Kakuro, decomposing multi-control CNOT gate, Hamiltonian simulation and log-normal state preparation.\nThis blog post discusses my studies on the Kakuro problem, which should be solved with Grover’s algorithm. This problem has been somewhat confusing. If we read the problem definition very carefully, it does not describe what kind of Grover algorithm application it should be. The question is if we are allowed to encode the constraints in Grover’s oracle, which is, in my opinion, a lot easier task than writing an oracle that genuinely solves the puzzle.\nI developed three different solutions to the challenge. Again, these solutions did not really meet the judging criteria and were not among the winning solutions. But instead, they study the problem from different angles.\nFirst, I represent the solution that encodes the variables and values. Instead of using a massive number of qubits, we should design quantum algorithms to take advantage of the exponentially growing state space. Hilbert’s space is indeed large, and we should benefit from that. The first solution’s downside is that it is not precisely Grover’s algorithm that solves the problem. In my opinion, Grover’s algorithm instead reads quantumly encoded solution from the black box oracle circuit. The black box oracle circuit is constructed classically. The solution aligns with Grover’s original idea of finding the marked element from an unsorted list. Now it depends on the problem definition if this is allowed or not. I developed the solution so you can input any Kakuro problem (not just the one in the Classiq’s problem). Then the algorithm classically creates the oracle, and Grover’s algorithm ‘‘reads’’ the solution from the oracle.\nThe second solution follows the idea that is also represented in Qiskit documentation: Solving Sudoku using Grover’s Algorithm. I believe that this is the idea that has been in the problem developers’ minds while designing the Kakuro challenge. Grover’s algorithm solves the problem unlike the previous case, but the downside is the circuit’s large qubit number and depth. On the other hand, this algorithm is not so interesting because it does not utilize the state space similarly to Grover’s original solution.\nI partly participate in the competitions because they motivate me to study new topics. Thus I also want to consider the third option based on an exciting paper: Grover Adaptive Search for Constrained Polynomial Binary Optimization. In this solution, I first encode the Kakuro problem as a quadratic unconstrained binary optimization (QUBO) problem, which could be solved with Grover’s algorithm in sufficiently small instances. This is an exciting approach because it differs significantly from the other two solutions. On the other hand, Grover’s Adaptive search does not scale well. I demonstrate that D-waves quantum annealers (and Amazon Braket) can solve the problem quickly (without Grover, unfortunately).\nKakuro problem The problem is described well in Classiq’s problem description and also in Wikipedia. The problem we solve here is assumed to have certain constraints that simplify the problem.\nTransforming integer variables to binary variables The notebook utilizes a specific binary variable encoding. Let us assume that we have $n$ variables $x_i$ for $i = 0, \\ldots, n - 1$. Now each of these variables can hold a value $0,1,2,3$. In order to express to problem using the binary variables, we define binary variables $x_{i, j}$ so that $i = 0, \\ldots, n - 1$ and $j \\in \\left\\{0,1,2,3 \\right\\}$. The interpretation of the binary variables is simple: $x_{i,j} = 1$ if $x_i = j$. This enables us to encode integers into a binary model. We have $4n$ binary variables in the final model.\nSection 1: Solve problem classically and encode solution as Grover’s oracle The first idea to tackle the challenge is to assign a state for each binary variable $x_{i,j}$. In the end, if we measure $x_{i,j} = 1$, we know that $x_i = j$. For example, the variable $x_{0,0}$ can correspond to the state $|0000\\rangle$ in the case $n = 4$. Because the number of states grows exponentially, we would be able to represent large problems with a small number of qubits. If we can transform the constraints into Grover oracle, which favors those states that correspond to the problem’s solution, this solves the problem.\nThis exercise shows me an exciting and confusing point about quantum oracles. Usually, quantum oracles encode the problems that we are solving. Oracles are black-box. In that sense, in this solution proposal, the quantum computer is just a machine that we use to read the result from the oracle.\nStudying constraint types We can divide the constraints into two classes. Because I want to be able to code the solution so that anyone, without thinking anything, simply inputs Kakuro constraints from the problem, I start …","date":1656201600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1656201600,"objectID":"04f5bbd9fd128f4aafccb014a8436d0f","permalink":"https://valteruo.github.io/post/classiq_coding_competition_kakuro/","publishdate":"2022-06-26T00:00:00Z","relpermalink":"/post/classiq_coding_competition_kakuro/","section":"post","summary":"Introduction Classiq organized an interesting quantum coding competition in May and June 2022. The competition consisted of four problems: Kakuro, decomposing multi-control CNOT gate, Hamiltonian simulation and log-normal state preparation.","tags":["quantum computing","Kakuro puzzle","Grover algorithm"],"title":"Studies on Solving Kakuro Puzzle with Grover's Algorithm","type":"post"},{"authors":["Valter Uotila"],"categories":["Classiq coding competition"],"content":"Introduction Classiq organized an interesting quantum coding competition in May and June 2022. The competition consisted of four problems: Kakuro, decomposing multi-control CNOT gate, Hamiltonian simulation and log-normal state preparation.\nIn this blog post, I represent my studies on the general problem: decomposing the multi-control CNOT gate. Classiq did not consider this solution among the best, but I think it is worth publishing the solution proposal as a blog post. The competition had simple but somewhat strict judging criteria: the best solutions are those which have the shortest circuit depth. Instead of actually concentrating on reaching the minimum circuit depth, I sketched three solutions with different initial conditions:\n What happens if we perform the decomposition without ancilla qubits? What happens when we use ancilla qubits? Can we use quantum machine learning to estimate multi-controlled CNOT gates even though we will have some errors?  All my answers are more or less just drafts, but probably, especially the quantum machine learning approach, might be interesting to develop further.\nThe original Classiq’s problem is decomposing an MCX gate with 14 control qubits into single-qubit and double-qubit CNOT gates using at most five ancilla qubits. This blog post should point out how essential ancilla qubits are in decompositions. For the case when we do not use ancilla qubits, the circuit becomes unpractically long and sometimes impossible to construct. After working on the topic, I thought that ancilla qubits, in some sense, resemble “quantum memory.”\nBecause the number 14 in the problem description feels like an arbitrary number for control qubits, the code in this blog post calculates a possible decomposition for any given number of control qubits depending on the user’s input. I base the idea on the classical book of Niels and Chuang and the excellent blog post by Craig Gidney. Also, the paper Elementary gates for quantum computation gives some ideas.\nWhen facing this kind of problem, maybe everyone first opens the classical book of Niels and Chuang. One can find there the following exercise:\nExercise 4.29: Find a circuit containing $\\mathcal{O}(n^2)$ Toffoli, CNOT, and single qubits gates that implement a $C^n(X)$ gate for $n  3$ using no work qubits.\nThis exercise appears to be surprisingly deep and hard. It is also connected to the problem in the competition, although it does not include the idea of minimal depth. The blog post by Craig Gidney is about this exercise.\nMy contribution is the explanation in this document and the implementation that works for any MCX gate. I completed the implementation with Pennylane because it allows me to code recursive structures easily. I use Qiskit to describe and visualize the method.\nFirst, we import some needed packages.\nimport json\rimport pennylane as qml\rfrom pennylane import numpy as np\rfrom qiskit import QuantumCircuit, QuantumRegister\rfrom qiskit.circuit.library.standard_gates import SXGate, SGate, TGate, IGate, MCXGate\r Solution proposal without ancilla qubits Square roots of NOT gate and finding fundamental decompositions with Gidney, Niels and Chuang As Gidney explains in the blog post, every logical quantum gate has the corresponding square root gate. When we note the fact that diagonal matrices are easy to square and $$\rZ = \\begin{bmatrix}\r1 \u0026amp; 0 \\\\\r0 \u0026amp; -1\r\\end{bmatrix},\r$$\rwe obtain that $$\r\\sqrt[n]{Z} = \\begin{bmatrix}\r1 \u0026amp; 0 \\\\\r0 \u0026amp; e^{i\\frac{\\pi}{n}}\r\\end{bmatrix}.\r$$\rWhen we change the computational basis to Hadamard -basis, taking the square roots becomes (at least theoretically) easier: $X = HZH$. That is also why we have Hadamard-gates in the Classiq’s example decomposition in the problem description. The $T$-gates and $S$-gates are the certain square roots of $Z$-gate, $T = \\sqrt[4]{Z}$ and $S = \\sqrt[2]{Z}$. So $T$ and $S$ gates are just a clever way to hide $X$ gates in the decomposition! Gidney reads Niels and Chuang very carefully and notices the power of the following circuit, which corresponds to the Toffoli gate:\nqr = QuantumRegister(3)\rcircuit = QuantumCircuit(qr)\rcircuit.append(SXGate().control(), [qr[1], qr[2]])\rcircuit.cx(0, 1)\rcircuit.append(SXGate().inverse().control(), [qr[1], qr[2]])\rcircuit.cx(0, 1)\rcircuit.append(SXGate().control(), [qr[0], qr[2]])\rcircuit.draw(output=\u0026#39;latex\u0026#39;)\r Output:   This circuit corresponds to the Toffoli case $V = (1-i)(I+iX)/2$ presented in Figure 4.8 in Niels and Chuang. Furthermore, we can change the basis to Hadamard. Recall that $H\\sqrt{X}H = \\sqrt{Z} = S$. Thus we can write:\nqr = QuantumRegister(3)\rcircuit = QuantumCircuit(qr)\rcircuit.h(2)\rcircuit.append(SGate().control(), [qr[1], qr[2]])\rcircuit.cx(0, 1)\rcircuit.append(SGate().inverse().control(), [qr[1], qr[2]])\rcircuit.cx(0, 1)\rcircuit.append(SGate().control(), [qr[0], qr[2]])\rcircuit.h(2)\rcircuit.draw(output=\u0026#39;latex\u0026#39;)\r Output:   If one wants a more concrete visualization of the circuit, it is easy to construct it in Quirk (which is, …","date":1656028800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1656028800,"objectID":"da1beed4ab595d6f70bdea953cc630bc","permalink":"https://valteruo.github.io/post/classiq_coding_competition_toffoli/","publishdate":"2022-06-24T00:00:00Z","relpermalink":"/post/classiq_coding_competition_toffoli/","section":"post","summary":"This blog post discusses my studies on Classiq's coding competition problem on decomposing multi-controlled CNOT gates. I represent three different solutions. The first solution does not use ancilla qubits, the second solution utilizes them, and the third applies quantum machine learning to simulate the circuit.","tags":["quantum computing","CNOT decomposition","circuit rewriting"],"title":"Studies on Multi-controlled CNOT Decompositions","type":"post"},{"authors":["Valter Uotila"],"categories":["Introduction"],"content":"Welcome to my academic webpage! Since the biography in the beginning is good to keep short, I explain my academic interests and motivate my research deeper in this post. I started as a Ph.D. student in April 2022 at the University of Helsinki in the computer science department in the Unified Database Management Systems research group. Before my Ph.D. studies, I worked as a research assistant in the same group.\nIf you check my previous publications, I have not been researching quantum computing but applications of category theory for multi-model databases. Usually, a relatively small science community can understand your research specifically. In my case, I felt that the community was even smaller than usual. Understandably, the database research community is not familiar with applied category theory. On the other hand, the results were not very deep from a category theory point of view. Although applied category theory is exciting and topical, I noticed that category theory and databases are relatively narrow research topics.\nI have studied special linear algebraic topics in my thesis, e.g., quadratic forms and Pfister forms. After all, quadratic and Pfister forms are matrices, and their manipulation requires advanced algebraic results. Because quantum computing is theoretically based on linear algebraic structures, I can relatively easily apply my previous knowledge and adopt quantum computing in my research. I have not officially studied quantum computing because our university had only a single quantum computing course, and I did not find it in my student times. Our department has plans to extend quantum computing teaching, which is a very positive direction. I believe that I will surely be a part of the development of education.\nI do not believe that quantum computing will bring immersive computational speedups in the near future. In terms of speed, the promises of quantum computing are sometimes over-hyped. When I represent my research, I aim to be realistic regarding its possibilities. On the other hand, time is just a single ‘‘parameter’’ that we want to minimize. Sometimes we should move our focus away from time efficiency. Whereas we can keep arguing if quantum computing can perform faster than classical, we can be sure that quantum computing is much more energy efficient than classical. We have read news about bitcoin mining which consumes a tremendous amount of energy, and the data centers require their own nuclear powerplants before their energy consumption is covered. Energy will be literary a disappearing resource in the world. Also, we are currently living in the very last moments when we can still do something against the climate crisis. Here, quantum computers can save a part of the field because their energy consumption is at the level of your fridge at home. Sometimes you might want to trade speed with energy.\nThe second motivation to add quantum computing along with databases and category theory is the conceptual model. Quantum computing is a fundamentally different computing model. Learning to think quantumly is a fascinating (and very long) journey! Quantum computing is intriguing, even if we never find any serious applications for it.\nHow can we apply quantum computing in data management? That is my research’s core question, and the possible ideas deserve their own post. I have written a detailed Ph.D. workshop paper for VLDB 2022 conference. If it gets accepted, I will link it here. Anyway, I want to point out that I want to continue researching the possibilities of category theory in the context of quantum computing and databases. There is already extensive research connecting category theory and quantum computing. The pioneer of the field is Bob Coecke. Research linking quantum computing and databases is still in its initial steps, and as far as I know, the database community is not aware of its possibilities.\n","date":1650240000,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1650240000,"objectID":"566dfd6f37b1e472a9e8bfb34f9f9504","permalink":"https://valteruo.github.io/post/initial-post/","publishdate":"2022-04-18T00:00:00Z","relpermalink":"/post/initial-post/","section":"post","summary":"Welcome to my academic webpage! Since the biography in the beginning is good to keep short, I explain my academic interests and motivate my research deeper in this post. I started as a Ph.","tags":["quantum computing","multi-model databases","diagrammatic reasoning"],"title":"Research in Intersection of Quantum Computing And Databases","type":"post"},{"authors":["Valter Uotila"],"categories":null,"content":"In this work, I prove the theorem of Bröcker and Scheiderer for basic open semi-algebraic sets. The theorem provides an upper bound for a stability index of a real variety. The theory is based on real closed fields which generalize real numbers. A real variety is a subset of a real closed field that is defined by polynomial equalities. Every semi-algebraic set is defined by a boolean combination of polynomial equations and inequalities of the sign conditions involving a finite number of polynomials. The basic semi-algebraic sets are those semi-algebraic sets that are defined solely by the sign conditions. In other words, we can construct semi-algebraic sets from the basic semi-algebraic sets by taking the finite unions, intersections, and complements of the basic semi-algebraic sets.\nThen the stability index of a real variety indicates the upper bound of numbers of polynomials that are required to express an arbitrary semi-algebraic subset of the variety. The theorem of Bröcker and Scheiderer shows that such upper bound exists and is finite for basic open semi-algebraic subsets of a real variety.\nThis work aims to be detailed in the proofs and represent sufficient prerequisites and references. The first chapter introduces the topic generally and motivates to study the theorem. The second chapter provides advanced prerequisites in algebra. One of such results is the factorial theorem of a total ring of fractions. Other advanced topics include radicals, prime ideals, associative algebras, a dimension of a ring, and various quotient structures.\nThe third chapter defines real closed fields and semi-algebraic sets that are the fundamental building blocks of the theory. The third chapter also develops the theory of quadratic forms. The main result of this chapter is Witt’s cancellation theorem. We also shortly describe the Tsen-Lang theorem.\nThe fourth chapter is about Pfister forms. Pfister forms are special kinds of quadratic forms that we extensively use in the proof of the main theorem. First, we define general Pfister forms over fields. Then we develop their theory over the fields of rational functions. Generally, Pfister forms share multiple similar properties as quadratic forms.\nThe fifth chapter represents one- and two-dimensional examples of the main theorem. These examples are based on research that is done on constructive approaches to the theorem of Bröcker and Scheiderer. The examples clarify and motivate the result from an algorithmic perspective. Finally, we prove the main theorem of the work. The proof is heavily based on Pfister forms.\n","date":1645574400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1645574400,"objectID":"d83cc45ad74349a756241c061f060211","permalink":"https://valteruo.github.io/publication/masters_thesis/","publishdate":"2022-04-16T00:00:00Z","relpermalink":"/publication/masters_thesis/","section":"publication","summary":"In this work, I prove the theorem of Bröcker and Scheiderer for basic open semi-algebraic sets. The theorem provides an upper bound for a stability index of a real variety. The theory is based on real closed fields which generalize real numbers.","tags":["stability index","Theorem of Bröcker and Scheiderer","real closed fields","semi-algebraic geometry","quadratic forms","Pfister forms"],"title":"Stability Index of Real Varieties – Theorem of Bröcker and Scheiderer","type":"publication"},{"authors":["Sardana Ivanova","Michele Boggia","Valter Uotila","Hannu Toivonen"],"categories":null,"content":"","date":1635859800,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1635859800,"objectID":"92b495145c4a8eaeb4cdca68d79d8bfa","permalink":"https://valteruo.github.io/talk/finnish-poetry-generation-using-fine-tuned-mbart/","publishdate":"2022-04-16T00:00:00Z","relpermalink":"/talk/finnish-poetry-generation-using-fine-tuned-mbart/","section":"event","summary":"","tags":["computational creativity","Finnish poetry","transformers"],"title":"Finnish Poetry Generation Using Fine-tuned mBART","type":"event"},{"authors":["Valter Uotila","Jiaheng Lu"],"categories":null,"content":"","date":1629453600,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1629453600,"objectID":"cef6c56394b77dd32e713b479966d4a8","permalink":"https://valteruo.github.io/publication/poly21/","publishdate":"2022-04-16T00:00:00Z","relpermalink":"/publication/poly21/","section":"publication","summary":"Data integration and migration processes in polystores and multi-model database management systems highly benefit from data and schema transformations. Rigorous modeling of transformations is a complex problem. The data and schema transformation field is scattered with multiple different transformation frameworks, tools, and mappings. These are usually domain-specific and lack solid theoretical foundations. Our first goal is to define category theoretical foundations for relational, graph, and hierarchical data models and instances. Each data instance is represented as a category theoretical mapping called a functor. We formalize data and schema transformations as Kan lifts utilizing the functorial representation for the instances. A Kan lift is a category theoretical construction consisting of two mappings satisfying the certain universal property. In this work, the two mappings correspond to schema transformation and data transformation.","tags":["multi-model data","category theory","data transformations","relational data","graph data","document data"],"title":"A Formal Category Theoretical Framework for Multi-model Data Transformations","type":"publication"},{"authors":["Valter Uotila","Lu, Jiaheng","Gawlick, Dieter","Liu, Zhen Hua","Das, Souripriya","Pogossiants, Gregory"],"categories":null,"content":"","date":1629446400,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1629446400,"objectID":"1ceb144abaa6b896316d8dbf103e2a15","permalink":"https://valteruo.github.io/publication/multicategory_demo_system_vldb21/","publishdate":"2022-04-16T00:00:00Z","relpermalink":"/publication/multicategory_demo_system_vldb21/","section":"publication","summary":"The variety of data is one of the important issues in the era of Big Data. The data are naturally organized in different formats and models, including structured data, semi-structured data, and unstructured data. Prior research has envisioned an approach to abstract multi-model data with a schema category and an instance category by using category theory. In this paper, we demonstrate a system, called MultiCategory, which processes multi-model queries based on category theory and functional programming. This demo is centered around four main scenarios to show a tangible system. First, we show how to build a schema category and an instance category by loading different models of data, including relational, XML, key-value, and graph data. Second, we show a few examples of query processing by using the functional programming language Haskell. Third, we demo the flexible outputs with different models of data for the same input query. Fourth, to better understand the category theoretical structure behind the queries, we offer a variety of graphical hooks to explore and visualize queries as graphs with respect to the schema category, as well as the query processing procedure with Haskell.","tags":["multi-model databases","category theory","functional programming"],"title":"MultiCategory: Multi-Model Query Processing Meets Category Theory and Functional Programming","type":"publication"},{"authors":["Valter Uotila","Lu, Jiaheng","Gawlick, Dieter","Liu, Zhen Hua","Das, Souripriya","Pogossiants, Gregory"],"categories":null,"content":"Invited short paper for SEAData workshop at VLDB 2021.\n","date":1629421200,"expirydate":-62135596800,"kind":"page","lang":"en","lastmod":1629421200,"objectID":"497f8e0404794c7ba998d2653e3add23","permalink":"https://valteruo.github.io/publication/seadata21/","publishdate":"2022-04-16T00:00:00Z","relpermalink":"/publication/seadata21/","section":"publication","summary":"Invited short paper for SEAData workshop at VLDB 2021.","tags":["visionary","multi-model databases","category theory","functional programming"],"title":"Multi-model Query Processing Meets Category Theory and Functional Programming","type":"publication"}]